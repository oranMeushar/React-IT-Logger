{"version":3,"sources":["context/IT-Logger/IT-LoggerContext.js","assets/recycle.png","Log/Log.js","Logs/Logs.js","Modal/Modal.js","assets/search.png","Home/Search/Search.js","LogForm/LogForm.js","TechList/TechList.js","TechForm/TechForm.js","assets/newTech.png","assets/technations.png","Home/Home.js","About/About.js","context/actions/actionsType.js","context/IT-Logger/IT-LoggerReducer.js","context/IT-Logger/IT-LoggerState.js","assets/system.png","Navigation/Navigation.js","Layout/Layout.js","App.js","index.js"],"names":["IT_LoggerConext","React","createContext","Log","props","logContentClasses","attention","push","className","onClick","change","join","message","technician","formatedDate","formatedTime","src","recycleImg","alt","delete","Logs","itLoggerContext","useContext","IT_LoggerContext","filteredLogs","map","log","key","id","deleteLog","handleDeleteLog","e","target","nodeName","setMessage","setAttention","setisModal","value","child","setIsEdit","logID","handleChangeLog","Modal","cssClasses","isModal","includes","children","Search","itLoggerConext","type","placeholder","onChange","handleSearch","searchImg","LogForm","useState","setCssClasses","selectRef","useRef","checkboxRef","inputRef","useEffect","current","focus","checked","setTechnician","action","onSubmit","preventDefault","isEdit","setResponse","changeLog","newLog","setTimeout","htmlFor","ref","name","required","technicians","idx","TechList","deleteTech","handleDelete","TechForm","setName","addTechnician","Home","response","logs","localStorage","getItem","setLogs","JSON","parse","setTechnicians","responseElem","length","newTechImg","technicianImg","About","ON_SEARCH","ON_NEW_LOG_SUBMIT","SET_LOGS","DELETE_LOG","CHANGE_LOG","ADD_TECHNICIAN","SET_TECHNICIANS","DELETE_TECH","reducer","state","actionsType","result","filter","toLowerCase","payload","date","copy","setItem","stringify","handleNewLogSubmit","handleSetLogs","foundLog","find","logsCopy","logCopy","handleAddTechnician","handleSetTechnician","tech","handleDeleteTechnician","IT_LoggerState","useReducer","IT_LoggerReducer","dispatch","Provider","search","now","Date","dateForamt","Math","random","Navigation","to","systemImg","exact","Layout","App","path","component","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.b02bcf98.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst IT_LoggerConext = React.createContext();\r\n\r\nexport default IT_LoggerConext;","export default __webpack_public_path__ + \"static/media/recycle.beeb4cb5.png\";","import React from 'react';\r\nimport './Log.css';\r\nimport recycleImg from '../assets/recycle.png';\r\n\r\nconst Log = (props) => {\r\n    \r\n    const logContentClasses = ['Log-content'];\r\n    if (props.attention === 'attention') {\r\n        logContentClasses.push('red')\r\n    }\r\n    else{\r\n        logContentClasses.push('blue')\r\n    }\r\n    \r\n    return (\r\n        <div className=\"Log\" onClick={props.change}>\r\n            <p className={logContentClasses.join(' ')}>{props.message}</p>\r\n            <p className=\"Log-writer-info\">\r\n                Last updated by <span>{props.technician}</span> on {props.formatedDate}  at <span>{props.formatedTime}</span>\r\n            </p>\r\n            <img src={recycleImg} alt=\"recycleImg\" onClick={props.delete}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Log;\r\n","import React, {useContext} from 'react'\r\nimport './Logs.css';\r\nimport IT_LoggerContext from '../context/IT-Logger/IT-LoggerContext';\r\nimport Log from '../Log/Log';\r\n\r\nconst Logs = (props) => {\r\n    const itLoggerContext = useContext(IT_LoggerContext);\r\n\r\n    const handleDeleteLog = (log) =>{\r\n        itLoggerContext.deleteLog(log.id);\r\n    }\r\n\r\n    const handleChangeLog = (e, log) =>{\r\n        if (e.target.nodeName!== 'IMG') {\r\n            props.setMessage(log.message);\r\n            props.setAttention(log.attention);\r\n            props.setisModal({\r\n                value: true,\r\n                child:'Home-new-log'\r\n            });\r\n            props.setIsEdit({\r\n                value:true,\r\n                logID:log.id\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Logs\">\r\n            <h1 className=\"Logs-header\">System Logs</h1>\r\n            {\r\n                itLoggerContext.filteredLogs.map((log) =>{\r\n                    return (\r\n                    <Log \r\n                    {...log} \r\n                    key={log.id} \r\n                    delete = {()=>handleDeleteLog(log)}\r\n                    change = {(e) =>handleChangeLog(e, log)}\r\n                    />)\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logs\r\n","import React from 'react';\r\nimport './Modal.css';\r\n\r\nconst Modal = (props) => { \r\n    const cssClasses = ['Modal'];\r\n    if (props.isModal.value) {\r\n        cssClasses.push('active');\r\n    }\r\n    const handleModalClick = (e) =>{\r\n        if (e.target.className.includes('Modal active')){\r\n            props.setisModal({\r\n                ...props.isModal,\r\n                value: false\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <div className={cssClasses.join(' ')} onClick={handleModalClick}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","export default __webpack_public_path__ + \"static/media/search.75ee25f7.png\";","import React,{useContext} from 'react'\r\nimport searchImg from '../../assets/search.png';\r\nimport IT_LoggerConext from '../../context/IT-Logger/IT-LoggerContext';\r\nimport './Search.css';\r\n\r\nconst Search = (props) => {\r\n    const itLoggerConext = useContext(IT_LoggerConext);\r\n    const handleSearchChange = (e) =>{\r\n        itLoggerConext.handleSearch(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Search\">\r\n                <div className=\"Search-input-wrapper\">\r\n                    <input \r\n                        type=\"text\"\r\n                        placeholder=\"Search logs...\"\r\n                        onChange={handleSearchChange}/>\r\n\r\n                        <img className=\"Search-image\" src={searchImg} alt=\"search-img\"/>\r\n                \r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React,{useState, useEffect, useRef, useContext} from 'react';\r\nimport './LogForm.css';\r\nimport IT_LoggerConext from '../context/IT-Logger/IT-LoggerContext';\r\n\r\nconst LogForm = (props) => {\r\n    const [cssClasses, setCssClasses] = useState('LogForm');\r\n    const itLoggerConext = useContext(IT_LoggerConext);\r\n\r\n    const selectRef = useRef();\r\n    const checkboxRef = useRef();\r\n    const inputRef = useRef();\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus();\r\n        if (!props.isModal.value){\r\n            props.setMessage('');\r\n            props.setAttention('');\r\n            props.setTechnician(null);\r\n            selectRef.current.value = \"\";\r\n            checkboxRef.current.checked = false;\r\n            setCssClasses('LogForm')\r\n        }\r\n        else{\r\n            setCssClasses('LogForm active')\r\n            if (props.attention === 'attention') {\r\n                checkboxRef.current.checked = true;\r\n            }  \r\n        }  \r\n        // eslint-disable-next-line        \r\n    }, [props.isModal.value])\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        props.setisModal({\r\n            ...props.isModal,\r\n            value: false\r\n        });\r\n        if (!props.isEdit.value) {\r\n            props.setResponse(`Log added by ${selectRef.current.value}`);\r\n            itLoggerConext.newLog(props.message, props.attention, props.technician);\r\n        }\r\n        else{\r\n            props.setIsEdit({\r\n                value:false,\r\n                logID:null\r\n            });\r\n            props.setResponse(`Log updated by ${selectRef.current.value}`)\r\n            itLoggerConext.changeLog(props.message, props.attention, props.technician, props.isEdit.logID);    \r\n        }\r\n\r\n        setTimeout(() => {\r\n            props.setResponse(``)\r\n        }, 3000);\r\n        \r\n    }\r\n\r\n    const handleCheckboxChange = (e) =>{\r\n        if (e.target.checked) {\r\n            props.setAttention('attention')\r\n        }\r\n        else{\r\n            props.setAttention('');\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className ={cssClasses}>\r\n            <h1>Enter System Log</h1>\r\n            <form action=\"\" className=\"LogForm-form\" onSubmit={handleSubmit}>\r\n                <label className=\"LogForm-form-newLog\" htmlFor=\"newLog\">\r\n                    <input \r\n                        type=\"text\"\r\n                        ref = {inputRef}\r\n                        name=\"newLog\"\r\n                        id=\"newLog\"\r\n                        placeholder= \"&nbsp;\"\r\n                        required\r\n                        onChange = {(e)=>props.setMessage(e.target.value)}\r\n                        value= {props.message}\r\n                    />\r\n                    <span>New Log...</span>\r\n                </label>\r\n                \r\n                <select ref={selectRef} name=\"technician\" onChange={(e)=>props.setTechnician(e.target.value)} required>\r\n                    <option value=\"\">Select Technician</option>\r\n                    {\r\n                        itLoggerConext.technicians.map((technician, idx) => {\r\n                            return <option value={technician} key={idx}>{technician}</option>\r\n                        })\r\n                    }\r\n                </select>\r\n                <label className=\"LogForm-form-attention\" htmlFor=\"need-attention\">\r\n                    Need attention:    \r\n                    <input \r\n                    ref = {checkboxRef}\r\n                    type=\"checkbox\" \r\n                    onChange = {handleCheckboxChange}\r\n                    value = {props.attention}/>\r\n                </label>\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogForm;\r\n","import React, {useContext, useEffect, useState} from 'react'\r\nimport IT_LoggerConext from '../context/IT-Logger/IT-LoggerContext'\r\nimport recycleImg from '../assets/recycle.png';\r\nimport './TechList.css';\r\n\r\nconst TechList = (props) => {\r\n    const [cssClasses, setCssClasses] = useState('TechList');\r\n    const itLoggerConext = useContext(IT_LoggerConext);\r\n\r\n    const handleDelete = (technician, idx) => {\r\n        \r\n        itLoggerConext.deleteTech(idx);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.isModal.value) {\r\n            setCssClasses('TechList active');\r\n        }\r\n        else{\r\n            setCssClasses('TechList');\r\n        }\r\n    },[props.isModal.value]);\r\n\r\n    \r\n    return (\r\n        <div className={cssClasses}>\r\n            <h1>Technician List</h1>\r\n            {\r\n                itLoggerConext.technicians.map((technician, idx) =>{\r\n                    return(\r\n                        <div className=\"TechList-tech\" key={idx}>\r\n                            <p>{technician}</p>\r\n                            <img src={recycleImg} alt=\"recycleImg\" onClick={()=>handleDelete(technician, idx)}/>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TechList\r\n","import React, {useState, useEffect, useContext, useRef} from 'react';\r\nimport IT_LoggerConext from '../context/IT-Logger/IT-LoggerContext';\r\nimport './TechForm.css';\r\n\r\n\r\nconst TechForm = (props) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [cssClasses, setCssClasses] = useState('TechForm');\r\n    const inputRef = useRef();\r\n\r\n    const itLoggerConext = useContext(IT_LoggerConext);\r\n    const handleChange = (e) =>{\r\n        setName(e.target.value);\r\n    } \r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        props.setResponse(`${name} was added as a new tech`);\r\n        \r\n\r\n        props.setisModal({\r\n            ...props.isModal,\r\n            value: false\r\n        });\r\n        setTimeout(() => {\r\n            props.setResponse(``)\r\n        }, 3000);\r\n        itLoggerConext.addTechnician(name);\r\n        setName('');\r\n    } \r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus();\r\n        if (props.isModal.value) {\r\n            setCssClasses('TechForm active');\r\n        }\r\n        else{\r\n            setCssClasses('TechForm');\r\n        }\r\n    },[props.isModal.value]);\r\n\r\n    return (\r\n        <form className={cssClasses} onSubmit={handleSubmit}>\r\n            <h1>New Technician</h1>\r\n            <label htmlFor=\"TechForm-name\">\r\n                <input \r\n                ref = {inputRef}\r\n                id=\"TechForm-name\" \r\n                className=\"TechForm-name\" \r\n                type=\"text\" \r\n                value={name} \r\n                placeholder = \"&nbsp;\"\r\n                onChange={handleChange}/>\r\n                <span>Technician Name</span>\r\n            </label>\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TechForm;\r\n","export default __webpack_public_path__ + \"static/media/newTech.7c389c04.png\";","export default __webpack_public_path__ + \"static/media/technations.257a6bba.png\";","import React,{useContext, useState, useEffect} from 'react'\r\nimport './Home.css';\r\nimport Logs from '../Logs/Logs';\r\nimport Modal from '../Modal/Modal';\r\nimport Search from './Search/Search';\r\nimport LogForm from '../LogForm/LogForm';\r\nimport TechList from '../TechList/TechList';\r\nimport TechForm from '../TechForm/TechForm';\r\nimport newTechImg from '../assets/newTech.png';\r\nimport technicianImg from '../assets/technations.png';\r\nimport IT_LoggerContext from '../context/IT-Logger/IT-LoggerContext';\r\n\r\n\r\n//rafce\r\nconst Home = (props) => {\r\n    const [isModal, setisModal] = useState({value:false, child:'Home-new-log'});\r\n    const [message, setMessage] = useState('');\r\n    const [response, setResponse] = useState('');\r\n    const [attention, setAttention] = useState('');\r\n    const [technician, setTechnician] = useState(null);\r\n    const [isEdit, setIsEdit] = useState({value:false, logID:null})\r\n\r\n    const itLoggerConext = useContext(IT_LoggerContext);\r\n\r\n    useEffect(() => {\r\n        const logs = localStorage.getItem('logs');\r\n        const technicians = localStorage.getItem('technicians');\r\n        if (logs) {\r\n            itLoggerConext.setLogs(JSON.parse(logs));\r\n        }\r\n        if (technicians) {\r\n            itLoggerConext.setTechnicians(JSON.parse(technicians));\r\n        }\r\n        // eslint-disable-next-line\r\n      },[])\r\n\r\n      const handleNewLogClicked = (e) =>{\r\n        if (e.target.className.includes('Home-new-log')) {\r\n            setisModal({\r\n                value:true,\r\n                child:'Home-new-log'\r\n            })\r\n        }\r\n      }\r\n\r\n      const handleNewTechClicked = (e) =>{\r\n        if (e.target.className.includes('Home-new-tech')) {\r\n            setisModal({\r\n                value:true,\r\n                child:'Home-new-tech'\r\n            })\r\n        } \r\n      }\r\n\r\n      const handleShowTechClicked = (e) =>{\r\n        if (e.target.className.includes('Home-show-tech')) {\r\n            setisModal({\r\n                value:true,\r\n                child:'Home-show-tech'\r\n            })\r\n        } \r\n      }\r\n\r\n      let child = null;\r\n      let responseElem = null;\r\n      if (response.length !== 0) {\r\n          responseElem = <h2 className=\"Home-main-response\">{response}</h2>\r\n      }\r\n\r\n      switch (isModal.child) {\r\n        case 'Home-new-log':\r\n            child =(\r\n                <LogForm \r\n                    isModal = {isModal} \r\n                    setisModal = {setisModal}\r\n                    setMessage = {setMessage}\r\n                    setAttention = {setAttention}\r\n                    setTechnician = {setTechnician}\r\n                    setIsEdit = {setIsEdit}\r\n                    setResponse = {setResponse}\r\n                    message = {message}\r\n                    response = {response}\r\n                    attention = {attention}\r\n                    technician = {technician}\r\n                    isEdit = {isEdit}\r\n                />\r\n            ) \r\n        break;\r\n\r\n        case 'Home-new-tech':\r\n            child = (\r\n                <TechForm\r\n                    isModal = {isModal} \r\n                    response = {response}\r\n                    setisModal = {setisModal}\r\n                    setResponse = {setResponse}\r\n                />\r\n            )\r\n        break;\r\n\r\n        case 'Home-show-tech':\r\n            child = (\r\n                <TechList\r\n                    isModal = {isModal} \r\n                    setisModal = {setisModal}\r\n                    \r\n                />\r\n            )\r\n        break;\r\n      \r\n        default:\r\n            break;\r\n      }\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            <Modal isModal = {isModal} setisModal = {setisModal}>\r\n                {child}\r\n            </Modal>\r\n            \r\n            <div className=\"Home-main\">\r\n                <Search/>\r\n                {responseElem}\r\n                <Logs \r\n                    isModal = {isModal} \r\n                    setisModal = {setisModal}\r\n                    setMessage = {setMessage}\r\n                    setAttention = {setAttention}\r\n                    setTechnician = {setTechnician}\r\n                    setIsEdit = {setIsEdit}\r\n                    message = {message}\r\n                    attention = {attention}\r\n                    technician = {technician}\r\n                    isEdit = {isEdit}\r\n                />\r\n            </div>\r\n            <div className=\"home-buttons\">\r\n                <div className=\"Home-button Home-new-log\" onClick={handleNewLogClicked}>\r\n                    <span className=\"Home-new-log\">+</span> \r\n                    <div className=\"hidden-buttons\">\r\n                        <div className=\"Home-button Home-new-tech\" onClick={handleNewTechClicked}>\r\n                            <img src={newTechImg} alt=\"newTechImg\"/>\r\n                        </div>\r\n                        <div className=\"Home-button Home-show-tech\" onClick={handleShowTechClicked}>\r\n                            <img src={technicianImg} alt=\"technicianImg\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>        \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport './About.css';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className =\"About\">\r\n            <h1>About this App</h1>\r\n            <h3>\r\n                Application for an IT department.\r\n                this application was implemented so that IT technicians can keep track\r\n                of their work and add log of their last work.\r\n            </h3>\r\n            <h4>\r\n                <span className=\"About-highlight\">Example:</span>\r\n                <span className=\"About-red\">Network server #077 is down</span>\r\n                <span className=\"About-blue\">HP Z2 Tower G4 Workstation 9LP61ES is up and running</span>\r\n                <span className=\"About-highlight\">Note:</span>\r\n                <span className=\"About-note\">\r\n                    In order to search for all logs which need attention,\r\n                    you should type 'attention' in the search bar\r\n                </span>\r\n                \r\n            </h4>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","export const ON_SEARCH = 'ON_SEARCH';\r\nexport const ON_NEW_LOG_SUBMIT = 'ON_NEW_LOG_SUBMIT';\r\nexport const ON_CHANGE_LOG_SUBMIT = 'ON_CHANGE_LOG_SUBMIT';\r\nexport const SET_LOGS = 'SET_LOGS';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const CHANGE_LOG = 'CHANGE_LOG';\r\nexport const ADD_TECHNICIAN = 'ADD_TECHNICIAN';\r\nexport const SET_TECHNICIANS = 'SET_TECHNICIANS';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\n\r\n","import * as actionsType from '../actions/actionsType';\r\n\r\n\r\nconst handleNewLogSubmit = (state, action) => {\r\n    const copy = [...state.logs];\r\n    copy.push(action.payload);\r\n    localStorage.setItem('logs', JSON.stringify(copy));\r\n    return{\r\n        ...state,\r\n        logs:copy,\r\n        filteredLogs:copy\r\n    };\r\n}\r\n\r\nconst handleSearch = (state, action) => {\r\n    const logs = [...state.logs];\r\n    \r\n    const result = logs.filter((log) =>{\r\n        return  log.message.toLowerCase().includes(action.payload.toLowerCase()) ||\r\n                log.technician.toLowerCase().includes(action.payload.toLowerCase()) ||\r\n                log.formatedDate.toLowerCase().includes(action.payload.toLowerCase()) ||\r\n                log.formatedTime.toLowerCase().includes(action.payload.toLowerCase()) ||\r\n                log.date.toLowerCase().includes(action.payload.toLowerCase()) ||\r\n                log.attention.toLowerCase() === action.payload.toLowerCase() \r\n    });\r\n    return{\r\n        ...state,\r\n        filteredLogs:result\r\n    }\r\n}\r\n\r\nconst handleSetLogs = (state, action) => {\r\n    return{\r\n        ...state,\r\n        logs:action.payload,\r\n        filteredLogs:action.payload\r\n    }\r\n}\r\n\r\nconst handleSetTechnician = (state, action) => {\r\n    return{\r\n        ...state,\r\n        technicians:action.payload\r\n    }\r\n}\r\n\r\nconst handleDeleteLog = (state, action) => {\r\n    const copy = [...state.logs];\r\n    const result = copy.filter((log) =>{\r\n        return  log.id !== action.payload \r\n    });\r\n    localStorage.setItem('logs', JSON.stringify(result))\r\n\r\n    return{\r\n        ...state,\r\n        logs:result,\r\n        filteredLogs:result\r\n    }\r\n}\r\n\r\nconst handleDeleteTechnician = (state, action) => {\r\n    const copy = [...state.technicians];\r\n    const result = copy.filter((tech, idx) =>{\r\n        return  idx !== action.payload \r\n    });\r\n    localStorage.setItem('technicians', JSON.stringify(result));\r\n    return{\r\n        ...state,\r\n        technicians:result\r\n    }\r\n}\r\n\r\nconst handleChangeLog = (state, action) => {\r\n    let foundLog = state.logs.find((log) =>{\r\n        return log.id === action.logID;\r\n    });\r\n    const logsCopy = [...state.logs];\r\n    let logCopy = {\r\n        ...foundLog,\r\n        ...action.payload\r\n    }\r\n    const result = logsCopy.map((log) =>{\r\n        if (log.id === action.logID) {\r\n            return logCopy\r\n        }\r\n        else{\r\n            return log\r\n        }\r\n    });\r\n\r\n    return{\r\n        ...state,\r\n        logs:result,\r\n        filteredLogs:result\r\n    }\r\n}\r\n\r\nconst handleAddTechnician = (state, action) =>{\r\n    const technicians = [...state.technicians];\r\n    technicians.push(action.payload);\r\n    localStorage.setItem('technicians', JSON.stringify(technicians));\r\n\r\n    return{\r\n        ...state,\r\n        technicians\r\n    }\r\n}\r\n\r\n\r\nconst reducer = (state, action) =>{\r\n    switch (action.type) {\r\n        case actionsType.ON_SEARCH:\r\n            return handleSearch(state, action)\r\n        case actionsType.ON_NEW_LOG_SUBMIT:\r\n            return handleNewLogSubmit(state, action)\r\n        \r\n        case actionsType.SET_LOGS:\r\n            return handleSetLogs(state, action)\r\n        case actionsType.DELETE_LOG:\r\n            return handleDeleteLog(state, action)\r\n        case actionsType.CHANGE_LOG:\r\n            return handleChangeLog(state, action)\r\n        case actionsType.ADD_TECHNICIAN:\r\n            return handleAddTechnician(state, action)\r\n        case actionsType.SET_TECHNICIANS:\r\n            return handleSetTechnician(state, action)                    \r\n        case actionsType.DELETE_TECH:\r\n            return handleDeleteTechnician(state, action)                    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React, {useReducer} from 'react';\r\nimport IT_LoggerConext from './IT-LoggerContext';\r\nimport IT_LoggerReducer from './IT-LoggerReducer';\r\nimport * as actionsType from '../actions/actionsType';\r\nimport dateForamt from 'dateformat';\r\n\r\n\r\nconst IT_LoggerState = (props) =>{\r\n    const initialState = {\r\n        logs:[],\r\n        filteredLogs:[],\r\n        technicians:[]\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(IT_LoggerReducer, initialState);\r\n\r\n\r\n\r\n    const handleSearch = (search) =>{\r\n        dispatch({\r\n            type:actionsType.ON_SEARCH,\r\n            payload:search\r\n        })\r\n    }\r\n\r\n    const newLog = (message, attention, technician) =>{\r\n        const now = new Date();\r\n        const formatedDate = dateForamt(now, \"dddd, mmmm d, yyyy\");\r\n        const formatedTime = dateForamt(now, \"HH:MM:ss\");\r\n        const date = `Last updated by ${technician} on ${formatedDate} at ${formatedTime}`;\r\n        dispatch({\r\n            type:actionsType.ON_NEW_LOG_SUBMIT,\r\n            payload:{\r\n                message,\r\n                attention, \r\n                technician,\r\n                formatedDate,\r\n                formatedTime,\r\n                date, \r\n                id:Math.random()\r\n            }\r\n        })\r\n    }\r\n\r\n    const setLogs = (logs) =>{\r\n        dispatch({\r\n            type:actionsType.SET_LOGS,\r\n            payload:logs\r\n        })\r\n    }\r\n\r\n    const setTechnicians = (technicians) =>{\r\n        dispatch({\r\n            type:actionsType.SET_TECHNICIANS,\r\n            payload:technicians\r\n        })\r\n    }\r\n\r\n    const deleteLog = (id) =>{\r\n        dispatch({\r\n            type:actionsType.DELETE_LOG,\r\n            payload:id,\r\n        })\r\n    }\r\n\r\n    const deleteTech= (id) =>{\r\n        dispatch({\r\n            type:actionsType.DELETE_TECH,\r\n            payload:id,\r\n        })\r\n    }\r\n\r\n    const addTechnician = (name) =>{\r\n        dispatch({\r\n            type:actionsType.ADD_TECHNICIAN,\r\n            payload:name\r\n        })\r\n    }\r\n\r\n    const changeLog = (message, attention, technician, logID) =>{\r\n        const now = new Date();\r\n        const formatedDate = dateForamt(now, \"dddd, mmmm d, yyyy\");\r\n        const formatedTime = dateForamt(now, \"HH:MM:ss\");\r\n        const date = `Last updated by ${technician} on ${formatedDate} at ${formatedTime}`\r\n        dispatch({\r\n            type:actionsType.CHANGE_LOG,\r\n            payload:{\r\n                message,\r\n                attention,\r\n                technician,\r\n                formatedDate,\r\n                formatedTime,\r\n                date,\r\n            },\r\n            logID\r\n        })\r\n    }\r\n\r\n\r\n    return <IT_LoggerConext.Provider\r\n        value={{\r\n            logs:state.logs,\r\n            filteredLogs:state.filteredLogs,\r\n            technicians:state.technicians,\r\n            handleSearch,\r\n            newLog,\r\n            setLogs,\r\n            deleteLog,\r\n            changeLog,\r\n            addTechnician,\r\n            setTechnicians,\r\n            deleteTech\r\n        }}>\r\n            {props.children}\r\n    </IT_LoggerConext.Provider>\r\n\r\n}\r\n\r\nexport default IT_LoggerState;\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/system.de8cc2c5.png\";","import React from 'react'\r\nimport {NavLink, Link} from 'react-router-dom';\r\nimport systemImg from '../assets/system.png';\r\nimport './Navigation.css';\r\nconst Navigation = (props) => {\r\n    return (\r\n        <div className=\"Navigation\">\r\n            <nav className=\"Navigation-nav\">\r\n                <div className=\"Navigation-nav-logo\">\r\n                    <Link to='/'><img src={systemImg} alt=\"systemImg\"/></Link>\r\n                </div>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink exact to='/'>Home</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink exact to='/about'>About</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react';\r\nimport './Layout.css';\r\nimport Navigation from '../Navigation/Navigation';\r\nconst Layout = (props) => {\r\n    return (\r\n        <div className = \"Layout\">\r\n            <Navigation/>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react';\nimport './App.css';\nimport Home from './Home/Home';\nimport About from './About/About';\nimport ItLoggerState from './context/IT-Logger/IT-LoggerState';\nimport {Route, Switch} from 'react-router-dom';\nimport Layout from './Layout/Layout';\nconst App = ()=> {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Switch>\n          <Route exact path='/'>\n            <ItLoggerState>\n              <Home/>\n            </ItLoggerState>\n          </Route>\n          <Route exact path='/about' component={About}/>\n        </Switch>\n      </Layout>   \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename='React-IT-Logger'>\n    <App />\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}